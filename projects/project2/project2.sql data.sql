-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.contact_interest
(
    contact_id integer,
    interest_id integer,
    PRIMARY KEY (contact_id, interest_id)
);

CREATE TABLE IF NOT EXISTS public.interest
(
    interest_id bigserial,
    interests character varying(100),
    PRIMARY KEY (interest_id)
);

CREATE TABLE IF NOT EXISTS public.my_contacts
(
    contact_id bigserial,
    last_name character varying(20),
    first_name character varying(20) NOT NULL,
    phone character varying(15),
    email character varying(15),
    gender character(1) NOT NULL,
   birthday  date NOT NULL,
    prof_id bigserial,
    zip_code character(4) NOT NULL,
    status_id bigserial NOT NULL,
   PRIMARY KEY (contact_id)
);

CREATE TABLE IF NOT EXISTS public.profession
(
    prof_id bigserial,
    profession character varying(50),
    CONSTRAINT unique_profession_key UNIQUE (profession)
);

CREATE TABLE IF NOT EXISTS public.zip_code
(
    zip_code bigint,
    city character varying(50),
    province character varying(30),
    PRIMARY KEY (zip_code)
);

CREATE TABLE IF NOT EXISTS public.status
(
    status_id bigserial,
    status character varying(30),
    PRIMARY KEY (status_id)
);

CREATE TABLE IF NOT EXISTS public.contact_seeking
(
    contact_id integer,
    seeking_id integer,
    PRIMARY KEY (contact_id, seeking_id)
);

CREATE TABLE IF NOT EXISTS public.seeking
(
    seeking_id bigserial,
    seeking character varying(100),
    PRIMARY KEY (seeking_id)
);

ALTER TABLE IF EXISTS public.contact_interest
    ADD FOREIGN KEY (contact_id)
    REFERENCES public.my_contacts (contact_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.contact_interest
    ADD FOREIGN KEY (interest_id)
    REFERENCES public.interest (interest_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.contact_seeking
    ADD FOREIGN KEY (contact_id)
    REFERENCES public.my_contacts (contact_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.contact_seeking
    ADD FOREIGN KEY (seeking_id)
    REFERENCES public.seeking (seeking_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

END;


-----****** INSERT STATEMENTS******-------

INSERT INTO profession (profession)
VALUES 
('Police Officer'), 
('Nurse'), 
('Salesperson'), 
('Medical Doctor'), 
('Therapist'), 
('Soccer Player'), 
('Sound enginner'), 
('Police Officer'), 
('Teacher'), 
('Soldier'), 
('Cleaner'), 
('Pilot'), 
('Mayor'), 
('Speaker of parliament'), 
('Photographer'), 
('Delvery personnel'); 
SELECT * FROM profession

---- TESTING PROFESSION UNIQUE CONSTRAINT--
INSERT INTO profession (profession)
Values
('Police Officer')

INSERT INTO status (status)
VALUES 
('Online'),
('Offline'),
('Restricted'),
('Deactivated');
SELECT * FROM status

INSERT INTO zip_code (zip_code, city, province)
VALUES 
('2000', 'Johannesburg', 'Gauteng'), 
('8000', 'Cape Town', 'Western Cape'), 
('4000', 'Durban', 'Kwazulu-Natal'), 
('6000', 'Port Elizabeth', 'Eastern Cape'), 
('1200', 'Nelspruit', 'Mpumalanga'), 
('0700', 'Polokwane', 'Limpopo'), 
('9301', 'Bloemfontein', 'Free State'), 
('2745', 'Mahikeng', 'North West'), 
('8301', 'Kimberley', 'Northern Cape'), 
('0001', 'Pretoria', 'Gauteng'), 
('7600', 'Stellenbosch', 'Western Cape'), 
('3201', 'Pietermaritzburg', 'KwaZulu-Natal'), 
('5201', ' East London', 'Eastern Cape'), 
('1035', 'Witbank (Emalahleni)', 'Mpumalanga'), 
('9700', 'Bethlehem', 'Free State'), 
('03000', 'Rustenburg', 'North West'), 
('2146', 'Sandton', 'Gauteng'), 
('0850', 'Tzaneen', 'Limpopo'); 
SELECT * FROM zip_code

------******TESTING ZIP_CODE CHECK CONSTRAINT***** -------
 INSERT INTO zip_code (zip_code, city, province)
VALUES 
 ('1', 'Test_City', 'Test_Province')



INSERT INTO seeking (seeking)
VALUES 
('Strictly hookup'),
('Open relationship'),
('Friendship that may lead to something, long or short distance als good'),
('Hookup,no strings attached with regular fun'),
('Serious relationship with somone ready to settle for good'),
('Strictly hookup');
SELECT * FROM seeking

INSERT INTO interests (interest) 
VALUES 
('Traveling'),
('Music e.g soul and rnb'),
('Cooking'),
('Sports e.g soccer'),
('Photography e.g photoshoots'),
('Painting'),
('Cycling'),
('Dancing e.g barcaddi'),
('Fishing'),
('Gardening'),
('Crafting'),
('Watching Movies e.g series marathon'),
('Animal Care'),
('Technology e.g coding'),
('Fitness e.g. Gym'),
SELECT * FROM interest

INSERT INTO contact_seeking 
VALUES 
(3, 3),  
(1, 4),  
(3, 1), 
(3, 2),  
(4, 3),
(4, 1),  
(5, 2),  
(5, 4),  
(6, 1),  
(6, 3),  
(7, 2),  
(8, 4),  
(9, 1),  
(9, 2), 
(10, 3), 
(10, 4), 
(11, 2), 
(14, 1), 
(14, 3), 
(15, 2);
SELECT * FROM contact_seeking


INSERT INTO contact_interest 
VALUES 
(1, 1), (1, 3), (1, 5), (1, 7), (1, 9),  
(3, 1), (3, 2), (3, 6), (3, 4), (3, 5),  
(2, 2), (2, 4), (2, 6), (2, 8), (2, 10), 
(4, 3), (4, 7), (4, 5), (4, 9), (4, 8), 
(5, 4), (5, 8), (5, 6), (5, 2), (5, 1),  
(6, 5), (6, 2), (6, 3), (6, 9), (6, 7), 
(7, 1), (7, 6), (7, 10), (7, 4), (7, 2),  
(8, 7), (8, 3), (8, 5), (8, 9), (8, 8), 
(9, 10), (9, 2), (9, 6), (9, 1), (9, 4), 
(10, 5), (10, 7), (10, 3), (10, 9), (10, 6),  
(11, 2), (11, 4), (11, 6), (11, 5), (11, 8), 
(12, 1), (12, 3), (12, 9), (12, 7), (12, 10),  
(13, 4), (13, 2), (13, 6), (13, 3), (13, 1),  
(14, 5), (14, 9), (14, 7), (14, 3), (14, 8), 
(15, 6), (15, 1), (15, 8), (15, 4), (15, 10),  
(16, 2), (16, 5), (16, 9), (16, 3), (16, 6), 
(17, 1), (17, 7), (17, 4), (17, 6), (17, 8),  
(18, 3), (18, 5), (18, 9), (18, 7), (18, 2),  
(19, 4), (19, 10), (19, 6), (19, 8), (19, 1),  
(20, 5), (20, 7), (20, 2), (20, 3), (20, 9)
SELECT * FROM contact_interest

---- CONTACT INFORMATION---

SELECT status.status,
contact.first_name,
contact.last_name,
contact.gender,
contact.birthday,
prof.profession,
zip.city,
zip.province,
s.seeking
FROM my_contacts AS contact
JOIN profession AS prof
ON contact.prof_id = prof.prof_id
JOIN zip_code AS zip
ON contact.zip_code = zip.zip_code
JOIN status 
ON contact.status_id = status.status_id
JOIN contact_seeking AS c_s
ON contact.contact_id = c_s.contact_id
JOIN seeking AS s
ON c_s.seeking_id = s.seeking_id

---- Search By Interests-----

SELECT 
contact.first_name,
contact.last_name,
zip.city,
zip.province,
i.interest,
contact.phone
FROM my_contacts AS contact
JOIN 
contact_interest AS c_i
ON contact.contact_id = c_i.contact_id
JOIN interests AS i
ON c_i.interest_id = i.interest_id
JOIN zip_code AS zip
ON contact.zip_code = zip.zip_code
WHERE i.interest_id = 15

-----Search By Seeking---

SELECT 
contact.first_name,
contact.last_name,
zip.city,
zip.province,
s.seeking,
contact.phone
FROM my_contacts AS contact
JOIN contact_seeking AS c_s
ON contact.contact_id = c_s.contact_id
JOIN seeking AS s
ON c_s.seeking_id = s.seeking_id
JOIN zip_code AS zip
ON contact.zip_code = zip.zip_code
WHERE s.seeking_id = 1
